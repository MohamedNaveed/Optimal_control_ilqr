%% Infinite horizon main
clear;clc;
load('pendulum_init_guess_T30.mat');
T = 30;

X0 = [0;0];  %theta (rad), thetadot (rad/s)
Xg = [180*pi/180;0];

model = pendulum_model();

%test_pendulum(Xg);



%% ILQR model-based (finite horizon controller.)

u_guess = [u_nom, zeros(1,T-length(u_nom))]; 
[x_nom, u_nom, cost] = ILQR(model, X0, Xg, u_guess, T);

%% plot cost convergence
figure;
semilogy(1:length(cost),cost,'LineWidth',2);

%% Terminal controller 
U_term = 0;
[A,B] = pendulum_A_B(Xg, U_term);

Q = eye(model.nx);
R = eye(model.nu);

[K,S,e] = dlqr(A,B,Q,R);

%% Terminal controller. 

T_term = 100;


x_term = zeros(model.nx,T_term+1);
u_term = zeros(model.nu,T_term);
x_term(:,1) = x_nom(:,T+1);
cost_term = 0;

for t = 1:100
    
    state_err = (x_term(:,t) - xg);
    state_err(1) = atan2(sin(state_err(1)),cos(state_err(1)));
    
    u_term = -K*state_err;
        
    cost_term = cost_term + 0.5*state_err'*Q*state_err + ... 
                                0.5*u_term(:,t)'*R*u_term(:,t);
                            
    x_term(:,t+1) = pendulum_nl_state_prop(t, x_term(:,t), u_term(:,t));
       
end


%% plot traj
figure;
timesteps = 0:T;
subplot(3,1,1);
plot(timesteps, x_nom(1,:),'LineWidth',2);
ylabel('$\theta$','Interpreter','latex');
subplot(3,1,2);
plot(timesteps, x_nom(2,:),'LineWidth',2);
ylabel('$\dot{\theta}$','Interpreter','latex');
subplot(3,1,3);
plot(timesteps(1:T), u_nom, 'LineWidth',2);
ylabel('u');
xlabel('Time steps');
